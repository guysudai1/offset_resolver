[++] Acquiring desired struct...
[==] Acquired struct!

[++] Resolving struct offsets and formatting...
Enter the struct's name: 

Name InheritedAddressSpace Type UCHAR InheritedAddressSpace; Offset 0x0

('InheritedAddressSpace', 'UCHAR InheritedAddressSpace;') 0x0

Name ReadImageFileExecOptions Type UCHAR ReadImageFileExecOptions; Offset 0x1

('ReadImageFileExecOptions', 'UCHAR ReadImageFileExecOptions;') 0x1

Name BeingDebugged Type UCHAR BeingDebugged; Offset 0x2

('BeingDebugged', 'UCHAR BeingDebugged;') 0x2

Name BitField Type UCHAR BitField; Offset 0x3

('BitField', 'UCHAR BitField;') 0x3

Name ImageUsesLargePages Type struct {
UCHAR (0x1) - 0x0 ImageUsesLargePages;
} Offset 0x3


Name IsProtectedProcess Type  Offset 0x3


Name IsImageDynamicallyRelocated Type  Offset 0x3


Name SkipPatchingUser32Forwarders Type  Offset 0x3


Name IsPackagedProcess Type  Offset 0x3


Name IsAppContainer Type  Offset 0x3


Name IsProtectedProcessLight Type  Offset 0x3


Name IsLongPathAwareProcess Type  Offset 0x3


Name Mutant Type ULONG Mutant; Offset 0x4

('Mutant', 'ULONG Mutant;') 0x4

Name ImageBaseAddress Type ULONG ImageBaseAddress; Offset 0x8

('ImageBaseAddress', 'ULONG ImageBaseAddress;') 0x8

Name Ldr Type ULONG Ldr; Offset 0xc

('Ldr', 'ULONG Ldr;') 0xc

Name ProcessParameters Type ULONG ProcessParameters; Offset 0x10

('ProcessParameters', 'ULONG ProcessParameters;') 0x10

Name SubSystemData Type ULONG SubSystemData; Offset 0x14

('SubSystemData', 'ULONG SubSystemData;') 0x14

Name ProcessHeap Type ULONG ProcessHeap; Offset 0x18

('ProcessHeap', 'ULONG ProcessHeap;') 0x18

Name FastPebLock Type ULONG FastPebLock; Offset 0x1c

('FastPebLock', 'ULONG FastPebLock;') 0x1c

Name AtlThunkSListPtr Type ULONG AtlThunkSListPtr; Offset 0x20

('AtlThunkSListPtr', 'ULONG AtlThunkSListPtr;') 0x20

Name IFEOKey Type ULONG IFEOKey; Offset 0x24

('IFEOKey', 'ULONG IFEOKey;') 0x24

Name CrossProcessFlags Type ULONG CrossProcessFlags; Offset 0x28

('CrossProcessFlags', 'ULONG CrossProcessFlags;') 0x28

Name ProcessInJob Type struct {
ULONG (0x1) - 0x0 ProcessInJob;
} Offset 0x28


Name ProcessInitializing Type  Offset 0x28


Name ProcessUsingVEH Type  Offset 0x28


Name ProcessUsingVCH Type  Offset 0x28


Name ProcessUsingFTH Type  Offset 0x28


Name ProcessPreviouslyThrottled Type  Offset 0x28


Name ProcessCurrentlyThrottled Type  Offset 0x28


Name ProcessImagesHotPatched Type  Offset 0x28


Name ReservedBits0 Type  Offset 0x28


Name KernelCallbackTable Type ULONG KernelCallbackTable; Offset 0x2c

('KernelCallbackTable', 'ULONG KernelCallbackTable;') 0x2c

Name UserSharedInfoPtr Type ULONG UserSharedInfoPtr; Offset 0x2c


Name SystemReserved Type ULONG SystemReserved; Offset 0x30

('SystemReserved', 'ULONG SystemReserved;') 0x30

Name AtlThunkSListPtr32 Type ULONG AtlThunkSListPtr32; Offset 0x34

('AtlThunkSListPtr32', 'ULONG AtlThunkSListPtr32;') 0x34

Name ApiSetMap Type ULONG ApiSetMap; Offset 0x38

('ApiSetMap', 'ULONG ApiSetMap;') 0x38

Name TlsExpansionCounter Type ULONG TlsExpansionCounter; Offset 0x3c

('TlsExpansionCounter', 'ULONG TlsExpansionCounter;') 0x3c

Name TlsBitmap Type ULONG TlsBitmap; Offset 0x40

('TlsBitmap', 'ULONG TlsBitmap;') 0x40

Name TlsBitmapBits Type ULONG [8] TlsBitmapBits (UQUAD); Offset 0x44

('TlsBitmapBits', 'ULONG [8] TlsBitmapBits (UQUAD);') 0x44

Name ReadOnlySharedMemoryBase Type ULONG ReadOnlySharedMemoryBase; Offset 0x4c

('ReadOnlySharedMemoryBase', 'ULONG ReadOnlySharedMemoryBase;') 0x4c

Name SharedData Type ULONG SharedData; Offset 0x50

('SharedData', 'ULONG SharedData;') 0x50

Name ReadOnlyStaticServerData Type ULONG ReadOnlyStaticServerData; Offset 0x54

('ReadOnlyStaticServerData', 'ULONG ReadOnlyStaticServerData;') 0x54

Name AnsiCodePageData Type ULONG AnsiCodePageData; Offset 0x58

('AnsiCodePageData', 'ULONG AnsiCodePageData;') 0x58

Name OemCodePageData Type ULONG OemCodePageData; Offset 0x5c

('OemCodePageData', 'ULONG OemCodePageData;') 0x5c

Name UnicodeCaseTableData Type ULONG UnicodeCaseTableData; Offset 0x60

('UnicodeCaseTableData', 'ULONG UnicodeCaseTableData;') 0x60

Name NumberOfProcessors Type ULONG NumberOfProcessors; Offset 0x64

('NumberOfProcessors', 'ULONG NumberOfProcessors;') 0x64

Name NtGlobalFlag Type ULONG NtGlobalFlag; Offset 0x68

('NtGlobalFlag', 'ULONG NtGlobalFlag;') 0x68

Name CriticalSectionTimeout Type  Offset 0x70

('CriticalSectionTimeout', '') 0x70

Name HeapSegmentReserve Type ULONG HeapSegmentReserve; Offset 0x78

('HeapSegmentReserve', 'ULONG HeapSegmentReserve;') 0x78

Name HeapSegmentCommit Type ULONG HeapSegmentCommit; Offset 0x7c

('HeapSegmentCommit', 'ULONG HeapSegmentCommit;') 0x7c

Name HeapDeCommitTotalFreeThreshold Type ULONG HeapDeCommitTotalFreeThreshold; Offset 0x80

('HeapDeCommitTotalFreeThreshold', 'ULONG HeapDeCommitTotalFreeThreshold;') 0x80

Name HeapDeCommitFreeBlockThreshold Type ULONG HeapDeCommitFreeBlockThreshold; Offset 0x84

('HeapDeCommitFreeBlockThreshold', 'ULONG HeapDeCommitFreeBlockThreshold;') 0x84

Name NumberOfHeaps Type ULONG NumberOfHeaps; Offset 0x88

('NumberOfHeaps', 'ULONG NumberOfHeaps;') 0x88

Name MaximumNumberOfHeaps Type ULONG MaximumNumberOfHeaps; Offset 0x8c

('MaximumNumberOfHeaps', 'ULONG MaximumNumberOfHeaps;') 0x8c

Name ProcessHeaps Type ULONG ProcessHeaps; Offset 0x90

('ProcessHeaps', 'ULONG ProcessHeaps;') 0x90

Name GdiSharedHandleTable Type ULONG GdiSharedHandleTable; Offset 0x94

('GdiSharedHandleTable', 'ULONG GdiSharedHandleTable;') 0x94

Name ProcessStarterHelper Type ULONG ProcessStarterHelper; Offset 0x98

('ProcessStarterHelper', 'ULONG ProcessStarterHelper;') 0x98

Name GdiDCAttributeList Type ULONG GdiDCAttributeList; Offset 0x9c

('GdiDCAttributeList', 'ULONG GdiDCAttributeList;') 0x9c

Name LoaderLock Type ULONG LoaderLock; Offset 0xa0

('LoaderLock', 'ULONG LoaderLock;') 0xa0

Name OSMajorVersion Type ULONG OSMajorVersion; Offset 0xa4

('OSMajorVersion', 'ULONG OSMajorVersion;') 0xa4

Name OSMinorVersion Type ULONG OSMinorVersion; Offset 0xa8

('OSMinorVersion', 'ULONG OSMinorVersion;') 0xa8

Name OSBuildNumber Type USHORT OSBuildNumber; Offset 0xac

('OSBuildNumber', 'USHORT OSBuildNumber;') 0xac

Name OSCSDVersion Type USHORT OSCSDVersion; Offset 0xae

('OSCSDVersion', 'USHORT OSCSDVersion;') 0xae

Name OSPlatformId Type ULONG OSPlatformId; Offset 0xb0

('OSPlatformId', 'ULONG OSPlatformId;') 0xb0

Name ImageSubsystem Type ULONG ImageSubsystem; Offset 0xb4

('ImageSubsystem', 'ULONG ImageSubsystem;') 0xb4

Name ImageSubsystemMajorVersion Type ULONG ImageSubsystemMajorVersion; Offset 0xb8

('ImageSubsystemMajorVersion', 'ULONG ImageSubsystemMajorVersion;') 0xb8

Name ImageSubsystemMinorVersion Type ULONG ImageSubsystemMinorVersion; Offset 0xbc

('ImageSubsystemMinorVersion', 'ULONG ImageSubsystemMinorVersion;') 0xbc

Name ActiveProcessAffinityMask Type ULONG ActiveProcessAffinityMask; Offset 0xc0

('ActiveProcessAffinityMask', 'ULONG ActiveProcessAffinityMask;') 0xc0

Name GdiHandleBuffer Type ULONG [136] GdiHandleBuffer (UQUAD); Offset 0xc4

('GdiHandleBuffer', 'ULONG [136] GdiHandleBuffer (UQUAD);') 0xc4

Name PostProcessInitRoutine Type ULONG PostProcessInitRoutine; Offset 0x14c

('PostProcessInitRoutine', 'ULONG PostProcessInitRoutine;') 0x14c

Name TlsExpansionBitmap Type ULONG TlsExpansionBitmap; Offset 0x150

('TlsExpansionBitmap', 'ULONG TlsExpansionBitmap;') 0x150

Name TlsExpansionBitmapBits Type ULONG [128] TlsExpansionBitmapBits (UQUAD); Offset 0x154

('TlsExpansionBitmapBits', 'ULONG [128] TlsExpansionBitmapBits (UQUAD);') 0x154

Name SessionId Type ULONG SessionId; Offset 0x1d4

('SessionId', 'ULONG SessionId;') 0x1d4

Name AppCompatFlags Type  Offset 0x1d8

('AppCompatFlags', '') 0x1d8

Name AppCompatFlagsUser Type  Offset 0x1e0

('AppCompatFlagsUser', '') 0x1e0

Name pShimData Type ULONG pShimData; Offset 0x1e8

('pShimData', 'ULONG pShimData;') 0x1e8

Name AppCompatInfo Type ULONG AppCompatInfo; Offset 0x1ec

('AppCompatInfo', 'ULONG AppCompatInfo;') 0x1ec

Name CSDVersion Type  Offset 0x1f0

('CSDVersion', '') 0x1f0

Name ActivationContextData Type ULONG ActivationContextData; Offset 0x1f8

('ActivationContextData', 'ULONG ActivationContextData;') 0x1f8

Name ProcessAssemblyStorageMap Type ULONG ProcessAssemblyStorageMap; Offset 0x1fc

('ProcessAssemblyStorageMap', 'ULONG ProcessAssemblyStorageMap;') 0x1fc

Name SystemDefaultActivationContextData Type ULONG SystemDefaultActivationContextData; Offset 0x200

('SystemDefaultActivationContextData', 'ULONG SystemDefaultActivationContextData;') 0x200

Name SystemAssemblyStorageMap Type ULONG SystemAssemblyStorageMap; Offset 0x204

('SystemAssemblyStorageMap', 'ULONG SystemAssemblyStorageMap;') 0x204

Name MinimumStackCommit Type ULONG MinimumStackCommit; Offset 0x208

('MinimumStackCommit', 'ULONG MinimumStackCommit;') 0x208

Name SparePointers Type ULONG [16] SparePointers (UQUAD); Offset 0x20c

('SparePointers', 'ULONG [16] SparePointers (UQUAD);') 0x20c

Name SpareUlongs Type ULONG [20] SpareUlongs (UQUAD); Offset 0x21c

('SpareUlongs', 'ULONG [20] SpareUlongs (UQUAD);') 0x21c

Name WerRegistrationData Type ULONG WerRegistrationData; Offset 0x230

('WerRegistrationData', 'ULONG WerRegistrationData;') 0x230

Name WerShipAssertPtr Type ULONG WerShipAssertPtr; Offset 0x234

('WerShipAssertPtr', 'ULONG WerShipAssertPtr;') 0x234

Name pUnused Type ULONG pUnused; Offset 0x238

('pUnused', 'ULONG pUnused;') 0x238

Name pImageHeaderHash Type ULONG pImageHeaderHash; Offset 0x23c

('pImageHeaderHash', 'ULONG pImageHeaderHash;') 0x23c

Name TracingFlags Type ULONG TracingFlags; Offset 0x240

('TracingFlags', 'ULONG TracingFlags;') 0x240

Name HeapTracingEnabled Type struct {
ULONG (0x1) - 0x0 HeapTracingEnabled;
} Offset 0x240


Name CritSecTracingEnabled Type  Offset 0x240


Name LibLoaderTracingEnabled Type  Offset 0x240


Name SpareTracingBits Type  Offset 0x240


Name CsrServerReadOnlySharedMemoryBase Type UQUAD CsrServerReadOnlySharedMemoryBase; Offset 0x248

('CsrServerReadOnlySharedMemoryBase', 'UQUAD CsrServerReadOnlySharedMemoryBase;') 0x248

Name TppWorkerpListLock Type ULONG TppWorkerpListLock; Offset 0x250

('TppWorkerpListLock', 'ULONG TppWorkerpListLock;') 0x250

Name TppWorkerpList Type  Offset 0x254

('TppWorkerpList', '') 0x254

Name WaitOnAddressHashTable Type ULONG [512] WaitOnAddressHashTable (UQUAD); Offset 0x25c

('WaitOnAddressHashTable', 'ULONG [512] WaitOnAddressHashTable (UQUAD);') 0x25c

Name TelemetryCoverageHeader Type ULONG TelemetryCoverageHeader; Offset 0x45c

('TelemetryCoverageHeader', 'ULONG TelemetryCoverageHeader;') 0x45c

Name CloudFileFlags Type ULONG CloudFileFlags; Offset 0x460

('CloudFileFlags', 'ULONG CloudFileFlags;') 0x460

Name CloudFileDiagFlags Type ULONG CloudFileDiagFlags; Offset 0x464

('CloudFileDiagFlags', 'ULONG CloudFileDiagFlags;') 0x464

Name PlaceholderCompatibilityMode Type RCHAR PlaceholderCompatibilityMode; Offset 0x468

('PlaceholderCompatibilityMode', 'RCHAR PlaceholderCompatibilityMode;') 0x468

Name PlaceholderCompatibilityModeReserved Type RCHAR [7] PlaceholderCompatibilityModeReserved (UQUAD); Offset 0x469

('PlaceholderCompatibilityModeReserved', 'RCHAR [7] PlaceholderCompatibilityModeReserved (UQUAD);') 0x469

Name LeapSecondData Type ULONG LeapSecondData; Offset 0x470

('LeapSecondData', 'ULONG LeapSecondData;') 0x470

Name LeapSecondFlags Type ULONG LeapSecondFlags; Offset 0x474

('LeapSecondFlags', 'ULONG LeapSecondFlags;') 0x474

Name SixtySecondEnabled Type struct {
ULONG (0x1) - 0x0 SixtySecondEnabled;
} Offset 0x474


Name Reserved Type  Offset 0x474


Name NtGlobalFlag2 Type ULONG NtGlobalFlag2; Offset 0x478

('NtGlobalFlag2', 'ULONG NtGlobalFlag2;') 0x478
 [++] Attempting to automatically get structure...
[==] Finished calculating offsets and formatting.
(if there were any errors please submit an issue to my github)

[++] Writing formatted string to output / file...

struct _PEB32
{
    UCHAR InheritedAddressSpace;                                 // 0x0
    UCHAR ReadImageFileExecOptions;                              // 0x1
    UCHAR BeingDebugged;                                         // 0x2
    union
    {
        UCHAR BitField;
        struct
        {
            UCHAR (0x1) - 0x0 ImageUsesLargePages;
            UCHAR (0x1) - 0x1 IsProtectedProcess;
            UCHAR (0x1) - 0x2 IsImageDynamicallyRelocated;
            UCHAR (0x1) - 0x3 SkipPatchingUser32Forwarders;
            UCHAR (0x1) - 0x4 IsPackagedProcess;
            UCHAR (0x1) - 0x5 IsAppContainer;
            UCHAR (0x1) - 0x6 IsProtectedProcessLight;
            UCHAR (0x1) - 0x7 IsLongPathAwareProcess;
        };
    }                                                            // 0x3
    ULONG Mutant;                                                // 0x4
    ULONG ImageBaseAddress;                                      // 0x8
    ULONG Ldr;                                                   // 0xc
    ULONG ProcessParameters;                                     // 0x10
    ULONG SubSystemData;                                         // 0x14
    ULONG ProcessHeap;                                           // 0x18
    ULONG FastPebLock;                                           // 0x1c
    ULONG AtlThunkSListPtr;                                      // 0x20
    ULONG IFEOKey;                                               // 0x24
    union
    {
        ULONG CrossProcessFlags;
        struct
        {
            ULONG (0x1) - 0x0 ProcessInJob;
            ULONG (0x1) - 0x1 ProcessInitializing;
            ULONG (0x1) - 0x2 ProcessUsingVEH;
            ULONG (0x1) - 0x3 ProcessUsingVCH;
            ULONG (0x1) - 0x4 ProcessUsingFTH;
            ULONG (0x1) - 0x5 ProcessPreviouslyThrottled;
            ULONG (0x1) - 0x6 ProcessCurrentlyThrottled;
            ULONG (0x1) - 0x7 ProcessImagesHotPatched;
            ULONG (0x18) - 0x8 ReservedBits0;
        };
    }                                                            // 0x28
    union
    {
        ULONG KernelCallbackTable;
        ULONG UserSharedInfoPtr;;
    }                                                            // 0x2c
    ULONG SystemReserved;                                        // 0x30
    ULONG AtlThunkSListPtr32;                                    // 0x34
    ULONG ApiSetMap;                                             // 0x38
    ULONG TlsExpansionCounter;                                   // 0x3c
    ULONG TlsBitmap;                                             // 0x40
    ULONG [8] TlsBitmapBits (UQUAD);                             // 0x44
    ULONG ReadOnlySharedMemoryBase;                              // 0x4c
    ULONG SharedData;                                            // 0x50
    ULONG ReadOnlyStaticServerData;                              // 0x54
    ULONG AnsiCodePageData;                                      // 0x58
    ULONG OemCodePageData;                                       // 0x5c
    ULONG UnicodeCaseTableData;                                  // 0x60
    ULONG NumberOfProcessors;                                    // 0x64
    ULONG NtGlobalFlag;                                          // 0x68
    // 0x70
    ULONG HeapSegmentReserve;                                    // 0x78
    ULONG HeapSegmentCommit;                                     // 0x7c
    ULONG HeapDeCommitTotalFreeThreshold;                        // 0x80
    ULONG HeapDeCommitFreeBlockThreshold;                        // 0x84
    ULONG NumberOfHeaps;                                         // 0x88
    ULONG MaximumNumberOfHeaps;                                  // 0x8c
    ULONG ProcessHeaps;                                          // 0x90
    ULONG GdiSharedHandleTable;                                  // 0x94
    ULONG ProcessStarterHelper;                                  // 0x98
    ULONG GdiDCAttributeList;                                    // 0x9c
    ULONG LoaderLock;                                            // 0xa0
    ULONG OSMajorVersion;                                        // 0xa4
    ULONG OSMinorVersion;                                        // 0xa8
    USHORT OSBuildNumber;                                        // 0xac
    USHORT OSCSDVersion;                                         // 0xae
    ULONG OSPlatformId;                                          // 0xb0
    ULONG ImageSubsystem;                                        // 0xb4
    ULONG ImageSubsystemMajorVersion;                            // 0xb8
    ULONG ImageSubsystemMinorVersion;                            // 0xbc
    ULONG ActiveProcessAffinityMask;                             // 0xc0
    ULONG [136] GdiHandleBuffer (UQUAD);                         // 0xc4
    ULONG PostProcessInitRoutine;                                // 0x14c
    ULONG TlsExpansionBitmap;                                    // 0x150
    ULONG [128] TlsExpansionBitmapBits (UQUAD);                  // 0x154
    ULONG SessionId;                                             // 0x1d4
    // 0x1d8
    // 0x1e0
    ULONG pShimData;                                             // 0x1e8
    ULONG AppCompatInfo;                                         // 0x1ec
    // 0x1f0
    ULONG ActivationContextData;                                 // 0x1f8
    ULONG ProcessAssemblyStorageMap;                             // 0x1fc
    ULONG SystemDefaultActivationContextData;                    // 0x200
    ULONG SystemAssemblyStorageMap;                              // 0x204
    ULONG MinimumStackCommit;                                    // 0x208
    ULONG [16] SparePointers (UQUAD);                            // 0x20c
    ULONG [20] SpareUlongs (UQUAD);                              // 0x21c
    ULONG WerRegistrationData;                                   // 0x230
    ULONG WerShipAssertPtr;                                      // 0x234
    ULONG pUnused;                                               // 0x238
    ULONG pImageHeaderHash;                                      // 0x23c
    union
    {
        ULONG TracingFlags;
        struct
        {
            ULONG (0x1) - 0x0 HeapTracingEnabled;
            ULONG (0x1) - 0x1 CritSecTracingEnabled;
            ULONG (0x1) - 0x2 LibLoaderTracingEnabled;
            ULONG (0x1d) - 0x3 SpareTracingBits;
        };
    }                                                            // 0x240
    UQUAD CsrServerReadOnlySharedMemoryBase;                     // 0x248
    ULONG TppWorkerpListLock;                                    // 0x250
    // 0x254
    ULONG [512] WaitOnAddressHashTable (UQUAD);                  // 0x25c
    ULONG TelemetryCoverageHeader;                               // 0x45c
    ULONG CloudFileFlags;                                        // 0x460
    ULONG CloudFileDiagFlags;                                    // 0x464
    RCHAR PlaceholderCompatibilityMode;                          // 0x468
    RCHAR [7] PlaceholderCompatibilityModeReserved (UQUAD);      // 0x469
    ULONG LeapSecondData;                                        // 0x470
    union
    {
        ULONG LeapSecondFlags;
        struct
        {
            ULONG (0x1) - 0x0 SixtySecondEnabled;
            ULONG (0x1f) - 0x1 Reserved;
        };
    }                                                            // 0x474
    ULONG NtGlobalFlag2;                                         // 0x478
}

[==] Finished writing output, thank you for using this program :)
